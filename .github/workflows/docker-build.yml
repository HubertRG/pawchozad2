name: Zad2 Solution

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  ci:
    name: Build, scan CVE & push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Docker metadata definitions
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/pawchozad2
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=short,prefix=sha-

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Login to DockerHub (cache)
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ vars.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image with cache (no push)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          load: true
          cache-from: |
            type=registry,ref=docker.io/${{ vars.DOCKERHUB_USER }}/pawchozad2:latest
          cache-to: |
            type=registry,ref=docker.io/${{ vars.DOCKERHUB_USER }}/pawchozad2:latest,mode=max
          tags: ${{ steps.meta.outputs.tags }}

      - name: Scan built image for CVEs
        uses: aquasecurity/trivy-action@v0.28.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/pawchozad2:${{ steps.meta.outputs.tags }}
          format: "table"
          exit-code: "1"
          severity: "CRITICAL,HIGH"

      - name: Push image to GHCR
        if: ${{ success() }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
